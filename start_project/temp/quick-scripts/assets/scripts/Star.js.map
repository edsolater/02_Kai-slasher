{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","position","dist","node","sub","mag","console","log","onPicked","spawnNewStar","destroy","gainScore","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACAC,gBAAY;AAFF,GAHL;;AAQPC,mBARO,+BAQa;AAClB;AACA,QAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,QAAjC;AACA;AACA,QAAIC,OAAO,KAAKC,IAAL,CAAUF,QAAV,CAAmBG,GAAnB,CAAuBN,SAAvB,EAAkCO,GAAlC,EAAX;AACAC,YAAQC,GAAR,CAAY,QAAZ,EAAsBL,IAAtB;AACA,WAAOA,IAAP;AACD,GAfM;AAiBPM,UAjBO,sBAiBI;AACT;AACA,SAAKT,IAAL,CAAUU,YAAV;AACA;AACA,SAAKN,IAAL,CAAUO,OAAV;AACA;AACA,SAAKX,IAAL,CAAUY,SAAV;AACD,GAxBM;AA0BPC,QA1BO,kBA0BAC,EA1BA,EA0BI;AACT;AACA,QAAI,KAAKhB,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC9CU,cAAQC,GAAR,CAAY,OAAZ;AACA;AACA,WAAKC,QAAL;AACA;AACD;AACD;AACA,QAAIM,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAkB,KAAKhB,IAAL,CAAUiB,YAAnD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACD;AAtCM,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n    pickRadius: 0,\r\n  },\r\n\r\n  getPlayerDistance() {\r\n    // 根据 player 节点位置判断距离\r\n    var playerPos = this.game.player.position\r\n    // 根据两点位置计算两点之间距离\r\n    var dist = this.node.position.sub(playerPos).mag()\r\n    console.log('dist: ', dist)\r\n    return dist\r\n  },\r\n\r\n  onPicked() {\r\n    // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n    this.game.spawnNewStar()\r\n    // 然后销毁当前星星节点\r\n    this.node.destroy()\r\n    // 调用 Game 脚本的得分方法\r\n    this.game.gainScore()\r\n  },\r\n\r\n  update(dt) {\r\n    // 每帧判断和主角之间的距离是否小于收集距离\r\n    if (this.getPlayerDistance() < this.pickRadius) {\r\n      console.log('碰到了星星')\r\n      // 调用收集行为\r\n      this.onPicked()\r\n      return\r\n    }\r\n    // 根据 Game 脚本中的计时器更新星星的透明度\r\n    var opacityRatio = 1 - this.game.timer / this.game.starDuration\r\n    var minOpacity = 50\r\n    this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity))\r\n  },\r\n})\r\n"]}